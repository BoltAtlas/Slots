{"ast":null,"code":"var _jsxFileName = \"D:\\\\VScode\\\\Program_Files\\\\Project\\\\Slots\\\\Slots-main\\\\me\\\\src\\\\components\\\\Histogram.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from './Button';\nimport \"../styles/Forms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserForm() {\n  _s();\n  const [BarInput, setBarInput] = useState({\n    Title: \"\",\n    Range: \"\"\n  });\n  const handleInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    console.log(name, value);\n    setBarInput({\n      ...BarInput,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await fetch('http://localhost:5000/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_input: BarInput\n        })\n      });\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      src: \"/videos/video4.mp4\",\n      autoplay: \"true\",\n      loop: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      type: \"submit\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Title\",\n          children: \"Title for Histogram: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          placeholder: \"Ages that play Video Games\",\n          value: BarInput.Title,\n          errorMessage: \"Title should be filled\",\n          required: true,\n          onChange: handleInput,\n          name: \"Title\",\n          id: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Range\",\n          children: \"Range:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          placeholder: \"12,12,12,12,13,13\",\n          errorMessage: \"Range should be values seperated by commas and should onlu include numbers\",\n          value: BarInput.Range,\n          required: true,\n          onChange: handleInput,\n          name: \"Range\",\n          id: \"Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          buttonStyle: \"btn--outline\",\n          children: \"Create Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgcontainbar\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/UserHistogram.png\",\n        className: \"chartimg\",\n        alt: \"Histogram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(UserForm, \"DfvSbgT+b9kAoLvy+PbrMOoY+xU=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","UserForm","_s","BarInput","setBarInput","Title","Range","handleInput","e","name","target","value","console","log","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","user_input","error","children","src","autoplay","loop","muted","fileName","_jsxFileName","lineNumber","columnNumber","type","onSubmit","htmlFor","autoComplete","placeholder","errorMessage","required","onChange","id","buttonStyle","className","alt","_c","$RefreshReg$"],"sources":["D:/VScode/Program_Files/Project/Slots/Slots-main/me/src/components/Histogram.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from './Button';\r\nimport \"../styles/Forms.css\";\r\n\r\nfunction UserForm() {\r\n\r\n  const [BarInput,setBarInput] = useState({\r\n    Title: \"\",\r\n    Range: \"\"\r\n  });\r\n\r\n  const handleInput = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    console.log(name,value);\r\n    setBarInput({...BarInput, [name]: value});\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await fetch('http://localhost:5000/submit', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ user_input: BarInput }),\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <video src='/videos/video4.mp4' autoplay='true' loop muted />\r\n    <form type=\"submit\" onSubmit={handleSubmit}>\r\n      <div>\r\n          <label htmlFor=\"Title\">Title for Histogram: </label>\r\n          <input type=\"text\" autoComplete='off'\r\n          placeholder=\"Ages that play Video Games\"\r\n          value={BarInput.Title}\r\n          errorMessage=\"Title should be filled\"\r\n          required={true}\r\n          onChange={handleInput}\r\n          name=\"Title\" id=\"Title\"/>\r\n          <label htmlFor=\"Range\">Range:</label>\r\n          <input type=\"text\" autoComplete='off'\r\n          placeholder='12,12,12,12,13,13'\r\n          errorMessage=\"Range should be values seperated by commas and should onlu include numbers\"\r\n          value={BarInput.Range}\r\n          required={true}\r\n          onChange={handleInput}\r\n          name=\"Range\" id=\"Range\"/>\r\n        <Button type=\"submit\" buttonStyle='btn--outline'>\r\n              Create Chart\r\n        </Button>\r\n      </div>\r\n    </form>\r\n    <div className=\"imgcontainbar\">\r\n    <img src=\"/images/UserHistogram.png\" className='chartimg' alt='Histogram'/>\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default UserForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}